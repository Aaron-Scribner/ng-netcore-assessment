{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/services/drivers/drivers.service.ts","webpack:///src/app/core/services/orders/orders.service.ts","webpack:///src/app/core/services/pizza-logistics/pizza-logistics.service.ts","webpack:///src/app/core/services/services.module.ts","webpack:///src/app/core/services/sizes/sizes.service.ts","webpack:///src/app/core/services/toppings/toppings.service.ts","webpack:///src/app/pizza-dashboard/pizza-dashboard-routing.module.ts","webpack:///src/app/pizza-dashboard/pizza-dashboard.module.ts","webpack:///src/app/pizza-dashboard/pizza-dashboard/pizza-dashboard.component.html","webpack:///src/app/pizza-dashboard/pizza-dashboard/pizza-dashboard.component.ts","webpack:///src/app/shared/components/nav-list-item.component.html","webpack:///src/app/shared/components/nav-list-item.component.ts","webpack:///src/app/shared/enums/driver-state.enum.ts","webpack:///src/app/shared/enums/pizza-state.enum.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/hmr.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","m","routes","path","pathMatch","redirectTo","loadChildren","AppRoutingModule","forRoot","scrollPositionRestoration","AppComponent","title","AppModule","CoreModule","parentModule","DriversService","httpClient","uri","get","driver","state","put","OrdersService","pizzaOrder","post","PizzaLogisticsService","ordersService","driversService","toppingsService","sizesService","orders","drivers","toppings","sizes","orders$","drivers$","toppings$","sizes$","order","open","placeOrder","subscribe","data","updateOrders","error","console","log","length","getOrders","next","getDrivers","find","x","getToppings","getSizes","cookPizza","driverId","deliverPizza","push","updateDriverState","pizzaOrderInArray","updateOrder","baseCookingTime","toppingsCookingTime","reduce","sum","current","getTopping","time","setOrderState","cooking","setTimeout","ready","setDriverState","enRoute","delivered","ServicesModule","SizesService","getUrl","ToppingsService","PizzaDashboardRoutingModule","PizzaDashboardModule","PizzaDashboardComponent","pizzaLogisticsService","subscriptions","navItems","displayName","route","subscribeOrders","unsubscribe","add","totalOrderCount","enRouteCount","filter","inKitchenCount","deliveredCount","NavListItemComponent","router","item","navigate","DriverState","PizzaState","SharedModule","environment","production","hmr","hmrBootstrap","bootstrap","ngModule","hot","accept","mod","dispose","appRef","injector","elements","components","map","c","location","nativeElement","makeVisible","destroy","defaultEncapsulation","Native","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'dashboard'\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./pizza-dashboard/pizza-dashboard.module').then(m => m.PizzaDashboardModule)\n  }\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' });\n","<app-pizza-dashboard></app-pizza-dashboard>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-assessment';\n}\n","import { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { PizzaDashboardModule } from './pizza-dashboard/pizza-dashboard.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CoreModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n\n    PizzaDashboardModule,\n    MatSidenavModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ServicesModule } from './services/services.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    HttpClientModule\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('Core Module is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DriverState } from '../../../shared/enums/driver-state.enum';\nimport { Driver } from '../../../shared/models/driver.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriversService {\n\n  private uri = 'http://localhost:4300/drivers';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getDrivers(): Observable<Driver[]> {\n    return this.httpClient.get<Driver[]>(this.uri);\n  }\n\n  public updateDriverState(driver: Driver, state: DriverState): void {\n    if (driver.state !== state) {\n      driver.state = state;\n      this.httpClient.put(this.uri, driver);\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaOrder } from '../../../shared/models/pizza-order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  private uri = 'http://localhost:4300/orders';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getOrders(): Observable<PizzaOrder[]> {\n    return this.httpClient.get<PizzaOrder[]>(this.uri);\n  }\n\n  public placeOrder(pizzaOrder: PizzaOrder): Observable<PizzaOrder> {\n    return this.httpClient.post<PizzaOrder>(this.uri, pizzaOrder);\n  }\n\n  public updateOrder(pizzaOrder: PizzaOrder): Observable<PizzaOrder> {\n    return this.httpClient.put<PizzaOrder>(this.uri, pizzaOrder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DriverState } from '../../../shared/enums/driver-state.enum';\nimport { PizzaState } from '../../../shared/enums/pizza-state.enum';\nimport { Driver } from '../../../shared/models/driver.model';\nimport { PizzaOrder } from '../../../shared/models/pizza-order.model';\nimport { PizzaSize } from '../../../shared/models/pizza-size.model';\nimport { PizzaTopping } from '../../../shared/models/pizza.topping';\nimport { DriversService } from '../drivers/drivers.service';\nimport { OrdersService } from '../orders/orders.service';\nimport { SizesService } from '../sizes/sizes.service';\nimport { ToppingsService } from '../toppings/toppings.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PizzaLogisticsService {\n  private orders: PizzaOrder[] = [];\n  private drivers: Driver[] = [];\n  private toppings: PizzaTopping[] = [];\n  private sizes: PizzaSize[] = [];\n\n  private orders$: BehaviorSubject<PizzaOrder[]> = new BehaviorSubject<PizzaOrder[]>([]);\n  private drivers$: BehaviorSubject<Driver[]> = new BehaviorSubject<Driver[]>([]);\n  private toppings$: BehaviorSubject<PizzaTopping[]> = new BehaviorSubject<PizzaTopping[]>([]);\n  private sizes$: BehaviorSubject<PizzaSize[]> = new BehaviorSubject<PizzaSize[]>([]);\n\n  constructor(\n    private ordersService: OrdersService,\n    private driversService: DriversService,\n    private toppingsService: ToppingsService,\n    private sizesService: SizesService) {\n  }\n\n  public createNewOrder(order: PizzaOrder): void {\n    order.state = PizzaState.open;\n    this.ordersService.placeOrder(order).subscribe(\n      data => this.updateOrders(data),\n      error => console.log(error)\n      );\n  }\n\n  public getOrders(): BehaviorSubject<PizzaOrder[]> {\n    if (this.orders.length === 0) {\n      this.ordersService.getOrders().subscribe(\n        data => {\n          this.orders = data;\n          this.orders$.next(this.orders);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.orders$;\n  }\n\n  public getDrivers(): BehaviorSubject<Driver[]> {\n    if (this.drivers.length === 0) {\n      this.driversService.getDrivers().subscribe(\n        data => {\n          this.drivers = data;\n          this.drivers$.next(this.drivers);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.drivers$;\n  }\n\n  public getDriverById(id: string): Driver {\n    return this.drivers.find(x => x.id === id);\n  }\n\n  public getToppings(): BehaviorSubject<PizzaTopping[]> {\n    if (this.toppings.length === 0) {\n      this.toppingsService.getToppings().subscribe(\n        data => {\n          this.toppings = data;\n          this.toppings$.next(this.toppings);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.toppings$;\n  }\n\n  public getToppingById(id: number): PizzaTopping {\n    return this.toppings.find(x => x.id === id);\n  }\n\n  public getSizes(): BehaviorSubject<PizzaSize[]> {\n    if (this.sizes.length === 0) {\n      this.sizesService.getSizes().subscribe(\n        data => {\n          this.sizes = data;\n          this.sizes$.next(this.sizes);\n        },\n          error => console.log(error)\n      );\n    }\n\n    return this.sizes$;\n  }\n\n  public placeNewOrder(pizzaOrder: PizzaOrder): void {\n    this.ordersService.placeOrder(pizzaOrder).subscribe(\n      data => this.updateOrders(data),\n      error => console.log(error)\n    );\n  }\n\n  public sendToKitchen(pizzaOrder: PizzaOrder): void {\n    this.cookPizza(pizzaOrder);\n  }\n\n  public assignDriver(pizzaOrder: PizzaOrder, driverId: string): void {\n    this.deliverPizza(pizzaOrder, driverId);\n  }\n\n  private updateOrders(pizzaOrder: PizzaOrder): void {\n    this.orders.push(pizzaOrder);\n    this.orders$.next(this.orders);\n  }\n\n  private setDriverState(driverId: string, state: DriverState): void {\n    const driver = this.drivers.find(x => x.id === driverId);\n    driver.state = state;\n    this.driversService.updateDriverState(driver, state);\n    this.drivers$.next(this.drivers);\n  }\n\n  private setOrderState(pizzaOrder: PizzaOrder, state: PizzaState): void {\n    const pizzaOrderInArray = this.orders.find(x => x.id === pizzaOrder.id);\n    pizzaOrderInArray.state = state;\n\n    this.ordersService.updateOrder(pizzaOrderInArray);\n    this.orders$.next(this.orders);\n  }\n\n  private cookPizza(pizzaOrder: PizzaOrder): void {\n    const baseCookingTime = 5;\n    let toppingsCookingTime = 0;\n\n    if (pizzaOrder.toppings.length > 0) {\n        toppingsCookingTime =\n          pizzaOrder.toppings.reduce((sum, current) => {\n            return sum + this.getTopping(current).time;\n          });\n    }\n\n    this.setOrderState(pizzaOrder, PizzaState.cooking);\n\n    setTimeout(() => {\n      this.setOrderState(pizzaOrder, PizzaState.ready);\n    }, (baseCookingTime + toppingsCookingTime) * 1000);\n  }\n\n  private deliverPizza(pizzaOrder: PizzaOrder, driverId: string): void {\n    this.setDriverState(driverId, DriverState.enRoute);\n    pizzaOrder.driverId = driverId;\n    this.setOrderState(pizzaOrder, PizzaState.enRoute);\n\n    setTimeout(() => {\n      this.setOrderState(pizzaOrder, PizzaState.delivered);\n      this.setDriverState(driverId, DriverState.ready);\n    }, 15000);\n  }\n\n  private getTopping(id: number): PizzaTopping {\n    return this.toppings.find(x => x.id === id);\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  providers: [\n  ]\n})\nexport class ServicesModule {\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaSize } from '../../../shared/models/pizza-size.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizesService {\n\n  private getUrl = 'http://localhost:4300/sizes';\n  constructor(private httpClient: HttpClient) { }\n\n  public getSizes(): Observable<PizzaSize[]> {\n    return this.httpClient.get<PizzaSize[]>(this.getUrl);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaTopping } from '../../../shared/models/pizza.topping';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToppingsService {\n\n  private getUrl = 'http://localhost:4300/toppings';\n  constructor(private httpClient: HttpClient) { }\n\n  public getToppings(): Observable<PizzaTopping[]> {\n    return this.httpClient.get<PizzaTopping[]>(this.getUrl);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'logistics'\n  },\n  {\n    path: 'logistics',\n    loadChildren: () => import('../pizza-logistics/pizza-logistics.module').then(m => m.PizzaLogisticsModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PizzaDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { PizzaDashboardRoutingModule } from './pizza-dashboard-routing.module';\nimport { PizzaDashboardComponent } from './pizza-dashboard/pizza-dashboard.component';\n\n@NgModule({\n  declarations: [\n    PizzaDashboardComponent,\n  ],\n  exports: [\n    PizzaDashboardComponent,\n  ],\n  imports: [\n    PizzaDashboardRoutingModule,\n    CommonModule,\n    SharedModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatDividerModule,\n  ],\n})\nexport class PizzaDashboardModule { }\n","<mat-toolbar>\n  <div class=\"company-logo\"></div>\n  <div class=\"stats\">\n    <div class=\"stats-one\">\n      <div>Orders: {{totalOrderCount}}</div>\n      <div>En Route: {{enRouteCount}}</div>\n      <div>In Kitchen: {{inKitchenCount}}</div>\n      <div>Delivered: {{deliveredCount}}</div>\n    </div>\n  </div>\n</mat-toolbar>\n<mat-drawer-container>\n  <mat-drawer mode=\"side\" opened>\n    <app-nav-list-item *ngFor=\"let item of navItems\" [item]=\"item\"></app-nav-list-item>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PizzaLogisticsService } from '../../core/services/pizza-logistics/pizza-logistics.service';\nimport { PizzaState } from '../../shared/enums/pizza-state.enum';\nimport { NavItem } from '../../shared/models/nav-item.model';\n\n@Component({\n  selector: 'app-pizza-dashboard',\n  templateUrl: './pizza-dashboard.component.html',\n  styleUrls: ['./pizza-dashboard.component.scss']\n})\nexport class PizzaDashboardComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  public navItems: NavItem[] = [\n    {\n      displayName: 'Logistics',\n      route: '/logistics',\n    }\n  ];\n\n  public totalOrderCount: number;\n  public enRouteCount: number;\n  public inKitchenCount: number;\n  public deliveredCount: number;\n\n  constructor(private pizzaLogisticsService: PizzaLogisticsService) { }\n\n  public ngOnInit(): void {\n    this.subscribeOrders();\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private subscribeOrders(): void {\n    this.subscriptions.add(this.pizzaLogisticsService.getOrders().subscribe(\n      data => {\n        this.totalOrderCount = data.length || 0;\n        this.enRouteCount = data.filter(x => x.state === PizzaState.enRoute).length || 0;\n        this.inKitchenCount = data.filter(x => x.state === PizzaState.cooking).length || 0;\n        this.deliveredCount = data.filter(x => x.state === PizzaState.delivered).length || 0;\n      },\n      error => console.log(error)\n    ));\n  }\n}\n","<a mat-list-item (click)=\"itemSelected(item)\" >\n    {{item.displayName}}\n</a>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { NavItem } from '../models/nav-item.model';\n\n@Component({\n  selector: 'app-nav-list-item',\n  templateUrl: './nav-list-item.component.html',\n  styleUrls: ['./nav-list-item.component.scss']\n})\nexport class NavListItemComponent implements OnInit {\n  @Input() item: NavItem;\n\n  constructor(public router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  itemSelected(item: NavItem) {\n    this.router.navigate([item.route]);\n  }\n}\n","export enum DriverState {\n  ready,\n  enRoute\n}\n","export enum PizzaState {\n  open,\n  preparing,\n  cooking,\n  ready,\n  enRoute,\n  delivered\n}\n","import { NgModule } from '@angular/core';\nimport { NavListItemComponent } from './components/nav-list-item.component';\nimport { MatListModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatListModule\n  ],\n  declarations: [\n    NavListItemComponent\n  ],\n  exports: [\n    NavListItemComponent\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModuleRef, ApplicationRef } from '@angular/core';\n\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport const hmrBootstrap = (\n    module: any,\n    bootstrap: () => Promise<NgModuleRef<any>>\n) => {\n    let ngModule: NgModuleRef<any>;\n    module.hot.accept();\n    bootstrap().then(mod => (ngModule = mod));\n    module.hot.dispose(() => {\n        const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n        const elements = appRef.components.map(c => c.location.nativeElement);\n        const makeVisible = createNewHosts(elements);\n        ngModule.destroy();\n        makeVisible();\n    });\n};","import 'hammerjs';\nimport { enableProdMode, ViewEncapsulation } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport {hmrBootstrap} from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule,{\n    defaultEncapsulation: ViewEncapsulation.Native\n});\n\n\n\n if (environment.hmr) {\n    if (module['hot']) {\n        hmrBootstrap(module, bootstrap);\n    } else {\n        console.error('HMR is not enabled for webpack-dev-server!');\n        console.log('Are you using the --hmr flag for ng serve?');\n    }\n } else {\n     bootstrap().catch(err => console.log(err));\n }\n\n\n"]}