{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/services/drivers/drivers.service.ts","./src/app/core/services/orders/orders.service.ts","./src/app/core/services/pizza-logistics/pizza-logistics.service.ts","./src/app/core/services/services.module.ts","./src/app/core/services/sizes/sizes.service.ts","./src/app/core/services/toppings/toppings.service.ts","./src/app/pizza-dashboard/pizza-dashboard-routing.module.ts","./src/app/pizza-dashboard/pizza-dashboard.module.ts","./src/app/pizza-dashboard/pizza-dashboard/pizza-dashboard.component.html","./src/app/pizza-dashboard/pizza-dashboard/pizza-dashboard.component.ts","./src/app/shared/components/nav-list-item.component.html","./src/app/shared/components/nav-list-item.component.ts","./src/app/shared/enums/driver-state.enum.ts","./src/app/shared/enums/pizza-state.enum.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/hmr.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'dashboard'\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./pizza-dashboard/pizza-dashboard.module').then(m => m.PizzaDashboardModule)\n  }\n];\n\nexport const AppRoutingModule: ModuleWithProviders = RouterModule.forRoot(routes, { scrollPositionRestoration: 'enabled' });\n","<app-pizza-dashboard></app-pizza-dashboard>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-assessment';\n}\n","import { MatSidenavModule } from '@angular/material/sidenav';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreModule } from './core/core.module';\nimport { PizzaDashboardModule } from './pizza-dashboard/pizza-dashboard.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    CoreModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n\n    PizzaDashboardModule,\n    MatSidenavModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { ServicesModule } from './services/services.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  exports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServicesModule,\n    HttpClientModule\n  ]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('Core Module is already loaded. Import it in the AppModule only');\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DriverState } from '../../../shared/enums/driver-state.enum';\nimport { Driver } from '../../../shared/models/driver.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DriversService {\n\n  private uri = 'http://localhost:4300/drivers';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getDrivers(): Observable<Driver[]> {\n    return this.httpClient.get<Driver[]>(this.uri);\n  }\n\n  public updateDriverState(driver: Driver, state: DriverState): void {\n    if (driver.state !== state) {\n      driver.state = state;\n      this.httpClient.put(this.uri, driver);\n    }\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaOrder } from '../../../shared/models/pizza-order.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  private uri = 'http://localhost:4300/orders';\n\n  constructor(private httpClient: HttpClient) { }\n\n  public getOrders(): Observable<PizzaOrder[]> {\n    return this.httpClient.get<PizzaOrder[]>(this.uri);\n  }\n\n  public placeOrder(pizzaOrder: PizzaOrder): Observable<PizzaOrder> {\n    return this.httpClient.post<PizzaOrder>(this.uri, pizzaOrder);\n  }\n\n  public updateOrder(pizzaOrder: PizzaOrder): Observable<PizzaOrder> {\n    return this.httpClient.put<PizzaOrder>(this.uri, pizzaOrder);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { DriverState } from '../../../shared/enums/driver-state.enum';\nimport { PizzaState } from '../../../shared/enums/pizza-state.enum';\nimport { Driver } from '../../../shared/models/driver.model';\nimport { PizzaOrder } from '../../../shared/models/pizza-order.model';\nimport { PizzaSize } from '../../../shared/models/pizza-size.model';\nimport { PizzaTopping } from '../../../shared/models/pizza.topping';\nimport { DriversService } from '../drivers/drivers.service';\nimport { OrdersService } from '../orders/orders.service';\nimport { SizesService } from '../sizes/sizes.service';\nimport { ToppingsService } from '../toppings/toppings.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PizzaLogisticsService {\n  private orders: PizzaOrder[] = [];\n  private drivers: Driver[] = [];\n  private toppings: PizzaTopping[] = [];\n  private sizes: PizzaSize[] = [];\n\n  private orders$: BehaviorSubject<PizzaOrder[]> = new BehaviorSubject<PizzaOrder[]>([]);\n  private drivers$: BehaviorSubject<Driver[]> = new BehaviorSubject<Driver[]>([]);\n  private toppings$: BehaviorSubject<PizzaTopping[]> = new BehaviorSubject<PizzaTopping[]>([]);\n  private sizes$: BehaviorSubject<PizzaSize[]> = new BehaviorSubject<PizzaSize[]>([]);\n\n  constructor(\n    private ordersService: OrdersService,\n    private driversService: DriversService,\n    private toppingsService: ToppingsService,\n    private sizesService: SizesService) {\n  }\n\n  public createNewOrder(order: PizzaOrder): void {\n    order.state = PizzaState.open;\n    this.ordersService.placeOrder(order).subscribe(\n      data => this.updateOrders(data),\n      error => console.log(error)\n      );\n  }\n\n  public getOrders(): BehaviorSubject<PizzaOrder[]> {\n    if (this.orders.length === 0) {\n      this.ordersService.getOrders().subscribe(\n        data => {\n          this.orders = data;\n          this.orders$.next(this.orders);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.orders$;\n  }\n\n  public getDrivers(): BehaviorSubject<Driver[]> {\n    if (this.drivers.length === 0) {\n      this.driversService.getDrivers().subscribe(\n        data => {\n          this.drivers = data;\n          this.drivers$.next(this.drivers);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.drivers$;\n  }\n\n  public getDriverById(id: string): Driver {\n    return this.drivers.find(x => x.id === id);\n  }\n\n  public getToppings(): BehaviorSubject<PizzaTopping[]> {\n    if (this.toppings.length === 0) {\n      this.toppingsService.getToppings().subscribe(\n        data => {\n          this.toppings = data;\n          this.toppings$.next(this.toppings);\n        },\n        error => console.log(error)\n      );\n    }\n\n    return this.toppings$;\n  }\n\n  public getToppingById(id: number): PizzaTopping {\n    return this.toppings.find(x => x.id === id);\n  }\n\n  public getSizes(): BehaviorSubject<PizzaSize[]> {\n    if (this.sizes.length === 0) {\n      this.sizesService.getSizes().subscribe(\n        data => {\n          this.sizes = data;\n          this.sizes$.next(this.sizes);\n        },\n          error => console.log(error)\n      );\n    }\n\n    return this.sizes$;\n  }\n\n  public placeNewOrder(pizzaOrder: PizzaOrder): void {\n    this.ordersService.placeOrder(pizzaOrder).subscribe(\n      data => this.updateOrders(data),\n      error => console.log(error)\n    );\n  }\n\n  public sendToKitchen(pizzaOrder: PizzaOrder): void {\n    this.cookPizza(pizzaOrder);\n  }\n\n  public assignDriver(pizzaOrder: PizzaOrder, driverId: string): void {\n    this.deliverPizza(pizzaOrder, driverId);\n  }\n\n  private updateOrders(pizzaOrder: PizzaOrder): void {\n    this.orders.push(pizzaOrder);\n    this.orders$.next(this.orders);\n  }\n\n  private setDriverState(driverId: string, state: DriverState): void {\n    const driver = this.drivers.find(x => x.id === driverId);\n    driver.state = state;\n    this.driversService.updateDriverState(driver, state);\n    this.drivers$.next(this.drivers);\n  }\n\n  private setOrderState(pizzaOrder: PizzaOrder, state: PizzaState): void {\n    const pizzaOrderInArray = this.orders.find(x => x.id === pizzaOrder.id);\n    pizzaOrderInArray.state = state;\n\n    this.ordersService.updateOrder(pizzaOrderInArray);\n    this.orders$.next(this.orders);\n  }\n\n  private cookPizza(pizzaOrder: PizzaOrder): void {\n    const baseCookingTime = 5;\n    let toppingsCookingTime = 0;\n\n    if (pizzaOrder.toppings.length > 0) {\n        toppingsCookingTime =\n          pizzaOrder.toppings.reduce((sum, current) => {\n            return sum + this.getTopping(current).time;\n          });\n    }\n\n    this.setOrderState(pizzaOrder, PizzaState.cooking);\n\n    setTimeout(() => {\n      this.setOrderState(pizzaOrder, PizzaState.ready);\n    }, (baseCookingTime + toppingsCookingTime) * 1000);\n  }\n\n  private deliverPizza(pizzaOrder: PizzaOrder, driverId: string): void {\n    this.setDriverState(driverId, DriverState.enRoute);\n    pizzaOrder.driverId = driverId;\n    this.setOrderState(pizzaOrder, PizzaState.enRoute);\n\n    setTimeout(() => {\n      this.setOrderState(pizzaOrder, PizzaState.delivered);\n      this.setDriverState(driverId, DriverState.ready);\n    }, 15000);\n  }\n\n  private getTopping(id: number): PizzaTopping {\n    return this.toppings.find(x => x.id === id);\n  }\n}\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  providers: [\n  ]\n})\nexport class ServicesModule {\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaSize } from '../../../shared/models/pizza-size.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SizesService {\n\n  private getUrl = 'http://localhost:4300/sizes';\n  constructor(private httpClient: HttpClient) { }\n\n  public getSizes(): Observable<PizzaSize[]> {\n    return this.httpClient.get<PizzaSize[]>(this.getUrl);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PizzaTopping } from '../../../shared/models/pizza.topping';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToppingsService {\n\n  private getUrl = 'http://localhost:4300/toppings';\n  constructor(private httpClient: HttpClient) { }\n\n  public getToppings(): Observable<PizzaTopping[]> {\n    return this.httpClient.get<PizzaTopping[]>(this.getUrl);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'logistics'\n  },\n  {\n    path: 'logistics',\n    loadChildren: () => import('../pizza-logistics/pizza-logistics.module').then(m => m.PizzaLogisticsModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PizzaDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDividerModule } from '@angular/material';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { PizzaDashboardRoutingModule } from './pizza-dashboard-routing.module';\nimport { PizzaDashboardComponent } from './pizza-dashboard/pizza-dashboard.component';\n\n@NgModule({\n  declarations: [\n    PizzaDashboardComponent,\n  ],\n  exports: [\n    PizzaDashboardComponent,\n  ],\n  imports: [\n    PizzaDashboardRoutingModule,\n    CommonModule,\n    SharedModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatDividerModule,\n  ],\n})\nexport class PizzaDashboardModule { }\n","<mat-toolbar>\n  <div class=\"company-logo\"></div>\n  <div class=\"stats\">\n    <div class=\"stats-one\">\n      <div>Orders: {{totalOrderCount}}</div>\n      <div>En Route: {{enRouteCount}}</div>\n      <div>In Kitchen: {{inKitchenCount}}</div>\n      <div>Delivered: {{deliveredCount}}</div>\n    </div>\n  </div>\n</mat-toolbar>\n<mat-drawer-container>\n  <mat-drawer mode=\"side\" opened>\n    <app-nav-list-item *ngFor=\"let item of navItems\" [item]=\"item\"></app-nav-list-item>\n  </mat-drawer>\n  <mat-drawer-content>\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PizzaLogisticsService } from '../../core/services/pizza-logistics/pizza-logistics.service';\nimport { PizzaState } from '../../shared/enums/pizza-state.enum';\nimport { NavItem } from '../../shared/models/nav-item.model';\n\n@Component({\n  selector: 'app-pizza-dashboard',\n  templateUrl: './pizza-dashboard.component.html',\n  styleUrls: ['./pizza-dashboard.component.scss']\n})\nexport class PizzaDashboardComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n\n  public navItems: NavItem[] = [\n    {\n      displayName: 'Logistics',\n      route: '/logistics',\n    }\n  ];\n\n  public totalOrderCount: number;\n  public enRouteCount: number;\n  public inKitchenCount: number;\n  public deliveredCount: number;\n\n  constructor(private pizzaLogisticsService: PizzaLogisticsService) { }\n\n  public ngOnInit(): void {\n    this.subscribeOrders();\n  }\n\n  public ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private subscribeOrders(): void {\n    this.subscriptions.add(this.pizzaLogisticsService.getOrders().subscribe(\n      data => {\n        this.totalOrderCount = data.length || 0;\n        this.enRouteCount = data.filter(x => x.state === PizzaState.enRoute).length || 0;\n        this.inKitchenCount = data.filter(x => x.state === PizzaState.cooking).length || 0;\n        this.deliveredCount = data.filter(x => x.state === PizzaState.delivered).length || 0;\n      },\n      error => console.log(error)\n    ));\n  }\n}\n","<a mat-list-item (click)=\"itemSelected(item)\" >\n    {{item.displayName}}\n</a>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport { NavItem } from '../models/nav-item.model';\n\n@Component({\n  selector: 'app-nav-list-item',\n  templateUrl: './nav-list-item.component.html',\n  styleUrls: ['./nav-list-item.component.scss']\n})\nexport class NavListItemComponent implements OnInit {\n  @Input() item: NavItem;\n\n  constructor(public router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  itemSelected(item: NavItem) {\n    this.router.navigate([item.route]);\n  }\n}\n","export enum DriverState {\n  ready,\n  enRoute\n}\n","export enum PizzaState {\n  open,\n  preparing,\n  cooking,\n  ready,\n  enRoute,\n  delivered\n}\n","import { NgModule } from '@angular/core';\nimport { NavListItemComponent } from './components/nav-list-item.component';\nimport { MatListModule } from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatListModule\n  ],\n  declarations: [\n    NavListItemComponent\n  ],\n  exports: [\n    NavListItemComponent\n  ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  hmr: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModuleRef, ApplicationRef } from '@angular/core';\n\nimport { createNewHosts } from '@angularclass/hmr';\n\nexport const hmrBootstrap = (\n    module: any,\n    bootstrap: () => Promise<NgModuleRef<any>>\n) => {\n    let ngModule: NgModuleRef<any>;\n    module.hot.accept();\n    bootstrap().then(mod => (ngModule = mod));\n    module.hot.dispose(() => {\n        const appRef: ApplicationRef = ngModule.injector.get(ApplicationRef);\n        const elements = appRef.components.map(c => c.location.nativeElement);\n        const makeVisible = createNewHosts(elements);\n        ngModule.destroy();\n        makeVisible();\n    });\n};","import 'hammerjs';\nimport { enableProdMode, ViewEncapsulation } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport {hmrBootstrap} from './hmr';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nconst bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule,{\n    defaultEncapsulation: ViewEncapsulation.Native\n});\n\n\n\n if (environment.hmr) {\n    if (module['hot']) {\n        hmrBootstrap(module, bootstrap);\n    } else {\n        console.error('HMR is not enabled for webpack-dev-server!');\n        console.log('Are you using the --hmr flag for ng serve?');\n    }\n } else {\n     bootstrap().catch(err => console.log(err));\n }\n\n\n"],"sourceRoot":"webpack:///"}